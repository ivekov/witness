version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    networks:
      - witness-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - witness-net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    depends_on:
      - kafka
    ports:
      - "8081:8080" # Используем порт 8081 на хосте, чтобы не конфликтовать с приложением
    networks:
      - witness-net
    environment:
      KAFKA_BROKERS: "kafka:29092" # Подключаемся к Kafka внутри Docker-сети

  opensearch:
    image: opensearchproject/opensearch:2.11.1
    container_name: opensearch
    networks:
      - witness-net
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch-data:/usr/share/opensearch/data

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.1
    container_name: opensearch-dashboards
    depends_on:
      - opensearch
    ports:
      - "5601:5601"
    networks:
      - witness-net
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]' # Подключаемся к OpenSearch внутри Docker-сети

  witness-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: witness-app
    depends_on:
      - kafka
      - opensearch
    ports:
      - "8080:8080" # Этот порт остается для вашего GraphQL API
    networks:
      - witness-net
    environment:
      - KAFKA_BROKERS=kafka:29092
      - OPENSEARCH_URL=http://opensearch:9200
      - KAFKA_TOPIC=audit-events
      - KAFKA_CONSUMER_GROUP=witness-group
      - APP_PORT=8080

volumes:
  opensearch-data:

networks:
  witness-net:
    driver: bridge
